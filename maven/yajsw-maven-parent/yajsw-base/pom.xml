<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<properties>
		
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		
		<space>&#0020;</space>
		<lf>&#0010;</lf>
		<cr>&#0014;</cr>
		<bs>&#0092;</bs>
		<linesep>${line.separator}</linesep>
		<yajsw-version>11.03</yajsw-version>
	</properties>

	<modelVersion>4.0.0</modelVersion>
	<artifactId>yajsw-base</artifactId>
	<dependencies>
		<dependency>
			<groupId>org.rzo</groupId>
			<artifactId>yajsw-core-deps</artifactId>
			
		</dependency>

	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>

				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/templates</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/templates</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${basedir}/src/app/java</source>
								<source>${basedir}/src/ahessian</source>
								<source>${basedir}/src/build/java</source>
								<source>${basedir}/src/hessian</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-resource</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>templates</directory>
									<targetPath>templates</targetPath>
									<includes>
										<include>**/*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin> 
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>build-classpath</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>build-classpath</goal>
						</goals>
						<configuration>
							<attach>true</attach>
							<localRepoProperty>../lib</localRepoProperty>
							<pathSeparator>$${pathDelim}</pathSeparator>
							
							<outputFile>${basedir}/target/assembly/classPath</outputFile>

						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>compile</id>
						<phase>compile</phase>
						<configuration>
							<target>
								<property name="cp.props"
									value="${basedir}/target/assembly/classPath.properties" />
								<property name="ls" value="${line.separator}"/>

								<concat destfile="${cp.props}">
									<string>wrapper.core.classpath=</string>
									<filelist dir="${basedir}/target/assembly" files="classPath" />
								</concat>
								<replace file="${cp.props}" token="${bs}" value="/" />
								
								<property file="${cp.props}" />
								<echo file="${MANIFEST}"
									message="Manifest-Version: 1.0
										${ls}Class-Path-Wrapper-Core: ${ls} ${wrapper.core.classpath}${ls}
										${ls}Class-Path-Wrapper-Extended: ${ls} ${wrapper.core.classpath}${ls}
										${ls}Class-Path-App: ${ls} ${wrapper.core.classpath}${ls}
										${ls}Main-Class: org.rzo.yajsw.boot.WrapperExeBooter${ls}" />
								<replace file="${MANIFEST}" token="${pathDelim}" value=" " />
								
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptor>
						${basedir}/src/assemble/bin.xml
					</descriptor>
				</configuration>
				</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<useDefaultManifestFile>false</useDefaultManifestFile>
					<archive> <manifestFile>${MANIFEST}</manifestFile> </archive>
				</configuration>
			</plugin>
			




		</plugins>
		<resources>
			<resource>
				<directory>templates</directory>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>add-source</goal>
											<goal>add-resource</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.4,)
										</versionRange>
										<goals>
											<goal>build-classpath</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											properties-maven-plugin
										</artifactId>
										<versionRange>
											[1.0-alpha-1,)
										</versionRange>
										<goals>
											<goal>
												read-project-properties
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.beardedgeeks
										</groupId>
										<artifactId>
											maven-merge-properties-plugin
										</artifactId>
										<versionRange>
											[0.2,)
										</versionRange>
										<goals>
											<goal>merge</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		

	</build>
	
	<parent>
		<groupId>org.rzo</groupId>
		<artifactId>yajsw-maven-parent</artifactId>
		<version>${yajsw-version}</version>
		<relativePath>..</relativePath>
	</parent>
</project>
